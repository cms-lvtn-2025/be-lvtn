// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/common/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ============= Filter Operators =============
type FilterOperator int32

const (
	FilterOperator_EQUAL              FilterOperator = 0  // =
	FilterOperator_NOT_EQUAL          FilterOperator = 1  // !=
	FilterOperator_GREATER_THAN       FilterOperator = 2  // >
	FilterOperator_GREATER_THAN_EQUAL FilterOperator = 3  // >=
	FilterOperator_LESS_THAN          FilterOperator = 4  // <
	FilterOperator_LESS_THAN_EQUAL    FilterOperator = 5  // <=
	FilterOperator_LIKE               FilterOperator = 6  // LIKE %value%
	FilterOperator_IN                 FilterOperator = 7  // IN (val1, val2, ...)
	FilterOperator_NOT_IN             FilterOperator = 8  // NOT IN
	FilterOperator_IS_NULL            FilterOperator = 9  // IS NULL
	FilterOperator_IS_NOT_NULL        FilterOperator = 10 // IS NOT NULL
	FilterOperator_BETWEEN            FilterOperator = 11 // BETWEEN val1 AND val2
)

// Enum value maps for FilterOperator.
var (
	FilterOperator_name = map[int32]string{
		0:  "EQUAL",
		1:  "NOT_EQUAL",
		2:  "GREATER_THAN",
		3:  "GREATER_THAN_EQUAL",
		4:  "LESS_THAN",
		5:  "LESS_THAN_EQUAL",
		6:  "LIKE",
		7:  "IN",
		8:  "NOT_IN",
		9:  "IS_NULL",
		10: "IS_NOT_NULL",
		11: "BETWEEN",
	}
	FilterOperator_value = map[string]int32{
		"EQUAL":              0,
		"NOT_EQUAL":          1,
		"GREATER_THAN":       2,
		"GREATER_THAN_EQUAL": 3,
		"LESS_THAN":          4,
		"LESS_THAN_EQUAL":    5,
		"LIKE":               6,
		"IN":                 7,
		"NOT_IN":             8,
		"IS_NULL":            9,
		"IS_NOT_NULL":        10,
		"BETWEEN":            11,
	}
)

func (x FilterOperator) Enum() *FilterOperator {
	p := new(FilterOperator)
	*p = x
	return p
}

func (x FilterOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_common_proto_enumTypes[0].Descriptor()
}

func (FilterOperator) Type() protoreflect.EnumType {
	return &file_proto_common_common_proto_enumTypes[0]
}

func (x FilterOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOperator.Descriptor instead.
func (FilterOperator) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_common_proto_rawDescGZIP(), []int{0}
}

// ============= Logical Conditions =============
type LogicalCondition int32

const (
	LogicalCondition_AND LogicalCondition = 0
	LogicalCondition_OR  LogicalCondition = 1
)

// Enum value maps for LogicalCondition.
var (
	LogicalCondition_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	LogicalCondition_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x LogicalCondition) Enum() *LogicalCondition {
	p := new(LogicalCondition)
	*p = x
	return p
}

func (x LogicalCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_common_proto_enumTypes[1].Descriptor()
}

func (LogicalCondition) Type() protoreflect.EnumType {
	return &file_proto_common_common_proto_enumTypes[1]
}

func (x LogicalCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalCondition.Descriptor instead.
func (LogicalCondition) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_common_proto_rawDescGZIP(), []int{1}
}

// ============= Filter Criteria (Nested Support) =============
type FilterCriteria struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Criteria:
	//
	//	*FilterCriteria_Condition
	//	*FilterCriteria_Group
	Criteria      isFilterCriteria_Criteria `protobuf_oneof:"criteria"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterCriteria) Reset() {
	*x = FilterCriteria{}
	mi := &file_proto_common_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCriteria) ProtoMessage() {}

func (x *FilterCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCriteria.ProtoReflect.Descriptor instead.
func (*FilterCriteria) Descriptor() ([]byte, []int) {
	return file_proto_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *FilterCriteria) GetCriteria() isFilterCriteria_Criteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *FilterCriteria) GetCondition() *FilterCondition {
	if x != nil {
		if x, ok := x.Criteria.(*FilterCriteria_Condition); ok {
			return x.Condition
		}
	}
	return nil
}

func (x *FilterCriteria) GetGroup() *FilterGroup {
	if x != nil {
		if x, ok := x.Criteria.(*FilterCriteria_Group); ok {
			return x.Group
		}
	}
	return nil
}

type isFilterCriteria_Criteria interface {
	isFilterCriteria_Criteria()
}

type FilterCriteria_Condition struct {
	Condition *FilterCondition `protobuf:"bytes,1,opt,name=condition,proto3,oneof"` // Single condition
}

type FilterCriteria_Group struct {
	Group *FilterGroup `protobuf:"bytes,2,opt,name=group,proto3,oneof"` // Nested group of conditions
}

func (*FilterCriteria_Condition) isFilterCriteria_Criteria() {}

func (*FilterCriteria_Group) isFilterCriteria_Criteria() {}

type FilterCondition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`                                   // field name: "title", "status", "created_at"
	Operator      FilterOperator         `protobuf:"varint,2,opt,name=operator,proto3,enum=common.FilterOperator" json:"operator,omitempty"` // comparison operator
	Values        []string               `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`                                 // value(s) to compare
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterCondition) Reset() {
	*x = FilterCondition{}
	mi := &file_proto_common_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterCondition) ProtoMessage() {}

func (x *FilterCondition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterCondition.ProtoReflect.Descriptor instead.
func (*FilterCondition) Descriptor() ([]byte, []int) {
	return file_proto_common_common_proto_rawDescGZIP(), []int{1}
}

func (x *FilterCondition) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FilterCondition) GetOperator() FilterOperator {
	if x != nil {
		return x.Operator
	}
	return FilterOperator_EQUAL
}

func (x *FilterCondition) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type FilterGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logic         LogicalCondition       `protobuf:"varint,1,opt,name=logic,proto3,enum=common.LogicalCondition" json:"logic,omitempty"` // AND/OR for this group
	Filters       []*FilterCriteria      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`                           // Nested filters (can be conditions or groups)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterGroup) Reset() {
	*x = FilterGroup{}
	mi := &file_proto_common_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterGroup) ProtoMessage() {}

func (x *FilterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterGroup.ProtoReflect.Descriptor instead.
func (*FilterGroup) Descriptor() ([]byte, []int) {
	return file_proto_common_common_proto_rawDescGZIP(), []int{2}
}

func (x *FilterGroup) GetLogic() LogicalCondition {
	if x != nil {
		return x.Logic
	}
	return LogicalCondition_AND
}

func (x *FilterGroup) GetFilters() []*FilterCriteria {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ============= Pagination =============
type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // page number (starting from 1)
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // number of items per page
	SortBy        string                 `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`        // field to sort by
	Descending    bool                   `protobuf:"varint,4,opt,name=descending,proto3" json:"descending,omitempty"`             // sort direction (false = ASC, true = DESC)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_proto_common_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_proto_common_common_proto_rawDescGZIP(), []int{3}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *Pagination) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

// ============= Generic Search Request =============
type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *Pagination            `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters       []*FilterCriteria      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_proto_common_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_common_proto_rawDescGZIP(), []int{4}
}

func (x *SearchRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchRequest) GetFilters() []*FilterCriteria {
	if x != nil {
		return x.Filters
	}
	return nil
}

var File_proto_common_common_proto protoreflect.FileDescriptor

const file_proto_common_common_proto_rawDesc = "" +
	"\n" +
	"\x19proto/common/common.proto\x12\x06common\"\x82\x01\n" +
	"\x0eFilterCriteria\x127\n" +
	"\tcondition\x18\x01 \x01(\v2\x17.common.FilterConditionH\x00R\tcondition\x12+\n" +
	"\x05group\x18\x02 \x01(\v2\x13.common.FilterGroupH\x00R\x05groupB\n" +
	"\n" +
	"\bcriteria\"s\n" +
	"\x0fFilterCondition\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x122\n" +
	"\boperator\x18\x02 \x01(\x0e2\x16.common.FilterOperatorR\boperator\x12\x16\n" +
	"\x06values\x18\x03 \x03(\tR\x06values\"o\n" +
	"\vFilterGroup\x12.\n" +
	"\x05logic\x18\x01 \x01(\x0e2\x18.common.LogicalConditionR\x05logic\x120\n" +
	"\afilters\x18\x02 \x03(\v2\x16.common.FilterCriteriaR\afilters\"v\n" +
	"\n" +
	"Pagination\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x03 \x01(\tR\x06sortBy\x12\x1e\n" +
	"\n" +
	"descending\x18\x04 \x01(\bR\n" +
	"descending\"u\n" +
	"\rSearchRequest\x122\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x12.common.PaginationR\n" +
	"pagination\x120\n" +
	"\afilters\x18\x02 \x03(\v2\x16.common.FilterCriteriaR\afilters*\xc1\x01\n" +
	"\x0eFilterOperator\x12\t\n" +
	"\x05EQUAL\x10\x00\x12\r\n" +
	"\tNOT_EQUAL\x10\x01\x12\x10\n" +
	"\fGREATER_THAN\x10\x02\x12\x16\n" +
	"\x12GREATER_THAN_EQUAL\x10\x03\x12\r\n" +
	"\tLESS_THAN\x10\x04\x12\x13\n" +
	"\x0fLESS_THAN_EQUAL\x10\x05\x12\b\n" +
	"\x04LIKE\x10\x06\x12\x06\n" +
	"\x02IN\x10\a\x12\n" +
	"\n" +
	"\x06NOT_IN\x10\b\x12\v\n" +
	"\aIS_NULL\x10\t\x12\x0f\n" +
	"\vIS_NOT_NULL\x10\n" +
	"\x12\v\n" +
	"\aBETWEEN\x10\v*#\n" +
	"\x10LogicalCondition\x12\a\n" +
	"\x03AND\x10\x00\x12\x06\n" +
	"\x02OR\x10\x01B\x15Z\x13thaily/proto/commonb\x06proto3"

var (
	file_proto_common_common_proto_rawDescOnce sync.Once
	file_proto_common_common_proto_rawDescData []byte
)

func file_proto_common_common_proto_rawDescGZIP() []byte {
	file_proto_common_common_proto_rawDescOnce.Do(func() {
		file_proto_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_common_common_proto_rawDesc), len(file_proto_common_common_proto_rawDesc)))
	})
	return file_proto_common_common_proto_rawDescData
}

var file_proto_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_common_common_proto_goTypes = []any{
	(FilterOperator)(0),     // 0: common.FilterOperator
	(LogicalCondition)(0),   // 1: common.LogicalCondition
	(*FilterCriteria)(nil),  // 2: common.FilterCriteria
	(*FilterCondition)(nil), // 3: common.FilterCondition
	(*FilterGroup)(nil),     // 4: common.FilterGroup
	(*Pagination)(nil),      // 5: common.Pagination
	(*SearchRequest)(nil),   // 6: common.SearchRequest
}
var file_proto_common_common_proto_depIdxs = []int32{
	3, // 0: common.FilterCriteria.condition:type_name -> common.FilterCondition
	4, // 1: common.FilterCriteria.group:type_name -> common.FilterGroup
	0, // 2: common.FilterCondition.operator:type_name -> common.FilterOperator
	1, // 3: common.FilterGroup.logic:type_name -> common.LogicalCondition
	2, // 4: common.FilterGroup.filters:type_name -> common.FilterCriteria
	5, // 5: common.SearchRequest.pagination:type_name -> common.Pagination
	2, // 6: common.SearchRequest.filters:type_name -> common.FilterCriteria
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_common_common_proto_init() }
func file_proto_common_common_proto_init() {
	if File_proto_common_common_proto != nil {
		return
	}
	file_proto_common_common_proto_msgTypes[0].OneofWrappers = []any{
		(*FilterCriteria_Condition)(nil),
		(*FilterCriteria_Group)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_common_common_proto_rawDesc), len(file_proto_common_common_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_common_common_proto_goTypes,
		DependencyIndexes: file_proto_common_common_proto_depIdxs,
		EnumInfos:         file_proto_common_common_proto_enumTypes,
		MessageInfos:      file_proto_common_common_proto_msgTypes,
	}.Build()
	File_proto_common_common_proto = out.File
	file_proto_common_common_proto_goTypes = nil
	file_proto_common_common_proto_depIdxs = nil
}
