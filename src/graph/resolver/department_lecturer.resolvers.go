package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"fmt"
	"thaily/src/graph/model"
)

// CreateCouncil is the resolver for the createCouncil field.
func (r *mutationResolver) CreateCouncil(ctx context.Context, input model.CreateCouncilInput) (*model.Council, error) {
	panic(fmt.Errorf("not implemented: CreateCouncil - createCouncil"))
}

// UpdateDepartmentCouncil is the resolver for the updateDepartmentCouncil field.
func (r *mutationResolver) UpdateDepartmentCouncil(ctx context.Context, id string, input model.UpdateCouncilInput) (*model.Council, error) {
	panic(fmt.Errorf("not implemented: UpdateDepartmentCouncil - updateDepartmentCouncil"))
}

// AddDefenceToCouncil is the resolver for the addDefenceToCouncil field.
func (r *mutationResolver) AddDefenceToCouncil(ctx context.Context, input model.CreateDefenceInput) (*model.Defence, error) {
	panic(fmt.Errorf("not implemented: AddDefenceToCouncil - addDefenceToCouncil"))
}

// RemoveDefenceFromCouncil is the resolver for the removeDefenceFromCouncil field.
func (r *mutationResolver) RemoveDefenceFromCouncil(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: RemoveDefenceFromCouncil - removeDefenceFromCouncil"))
}

// ApproveTopicStage1 is the resolver for the approveTopicStage1 field.
func (r *mutationResolver) ApproveTopicStage1(ctx context.Context, id string) (*model.Topic, error) {
	panic(fmt.Errorf("not implemented: ApproveTopicStage1 - approveTopicStage1"))
}

// RejectTopicStage1 is the resolver for the rejectTopicStage1 field.
func (r *mutationResolver) RejectTopicStage1(ctx context.Context, id string, reason *string) (*model.Topic, error) {
	panic(fmt.Errorf("not implemented: RejectTopicStage1 - rejectTopicStage1"))
}

// AssignTopicToCouncil is the resolver for the assignTopicToCouncil field.
func (r *mutationResolver) AssignTopicToCouncil(ctx context.Context, topicCouncilID string, councilID string) (*model.TopicCouncil, error) {
	panic(fmt.Errorf("not implemented: AssignTopicToCouncil - assignTopicToCouncil"))
}

// GetDepartmentTeachers is the resolver for the getDepartmentTeachers field.
func (r *queryResolver) GetDepartmentTeachers(ctx context.Context, search model.SearchRequestInput) ([]*model.Teacher, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentTeachers - getDepartmentTeachers"))
}

// GetDepartmentStudents is the resolver for the getDepartmentStudents field.
func (r *queryResolver) GetDepartmentStudents(ctx context.Context, search model.SearchRequestInput) ([]*model.Student, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentStudents - getDepartmentStudents"))
}

// GetDepartmentSemesters is the resolver for the getDepartmentSemesters field.
func (r *queryResolver) GetDepartmentSemesters(ctx context.Context, search model.SearchRequestInput) ([]*model.Semester, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentSemesters - getDepartmentSemesters"))
}

// GetDepartmentMajors is the resolver for the getDepartmentMajors field.
func (r *queryResolver) GetDepartmentMajors(ctx context.Context, search model.SearchRequestInput) ([]*model.Major, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentMajors - getDepartmentMajors"))
}

// GetDepartmentFaculties is the resolver for the getDepartmentFaculties field.
func (r *queryResolver) GetDepartmentFaculties(ctx context.Context, search model.SearchRequestInput) ([]*model.Faculty, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentFaculties - getDepartmentFaculties"))
}

// GetDepartmentTopics is the resolver for the getDepartmentTopics field.
func (r *queryResolver) GetDepartmentTopics(ctx context.Context, search model.SearchRequestInput) ([]*model.Topic, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentTopics - getDepartmentTopics"))
}

// GetDepartmentTopicDetail is the resolver for the getDepartmentTopicDetail field.
func (r *queryResolver) GetDepartmentTopicDetail(ctx context.Context, id string) (*model.Topic, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentTopicDetail - getDepartmentTopicDetail"))
}

// GetDepartmentEnrollments is the resolver for the getDepartmentEnrollments field.
func (r *queryResolver) GetDepartmentEnrollments(ctx context.Context, search model.SearchRequestInput) ([]*model.Enrollment, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentEnrollments - getDepartmentEnrollments"))
}

// GetDepartmentEnrollmentDetail is the resolver for the getDepartmentEnrollmentDetail field.
func (r *queryResolver) GetDepartmentEnrollmentDetail(ctx context.Context, id string) (*model.Enrollment, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentEnrollmentDetail - getDepartmentEnrollmentDetail"))
}

// GetDepartmentCouncils is the resolver for the getDepartmentCouncils field.
func (r *queryResolver) GetDepartmentCouncils(ctx context.Context, search model.SearchRequestInput) ([]*model.Council, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentCouncils - getDepartmentCouncils"))
}

// GetDepartmentCouncilDetail is the resolver for the getDepartmentCouncilDetail field.
func (r *queryResolver) GetDepartmentCouncilDetail(ctx context.Context, id string) (*model.Council, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentCouncilDetail - getDepartmentCouncilDetail"))
}

// GetDepartmentDefences is the resolver for the getDepartmentDefences field.
func (r *queryResolver) GetDepartmentDefences(ctx context.Context, councilID string) ([]*model.Defence, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentDefences - getDepartmentDefences"))
}

// GetDepartmentGradeDefences is the resolver for the getDepartmentGradeDefences field.
func (r *queryResolver) GetDepartmentGradeDefences(ctx context.Context, search model.SearchRequestInput) ([]*model.GradeDefence, error) {
	panic(fmt.Errorf("not implemented: GetDepartmentGradeDefences - getDepartmentGradeDefences"))
}
