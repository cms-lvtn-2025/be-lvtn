// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package generated

import (
	"context"
	"thaily/src/graph/model"
	"time"

	"github.com/99designs/gqlgen/graphql"
	"github.com/vektah/gqlparser/v2/ast"
)

// region    ************************** generated!.gotpl **************************

// endregion ************************** generated!.gotpl **************************

// region    ***************************** args.gotpl *****************************

// endregion ***************************** args.gotpl *****************************

// region    ************************** directives.gotpl **************************

// endregion ************************** directives.gotpl **************************

// region    **************************** field.gotpl *****************************

// endregion **************************** field.gotpl *****************************

// region    **************************** input.gotpl *****************************

// endregion **************************** input.gotpl *****************************

// region    ************************** interface.gotpl ***************************

// endregion ************************** interface.gotpl ***************************

// region    **************************** object.gotpl ****************************

// endregion **************************** object.gotpl ****************************

// region    ***************************** type.gotpl *****************************

func (ec *executionContext) unmarshalNDefencePosition2thailyᚋsrcᚋgraphᚋmodelᚐDefencePosition(ctx context.Context, v any) (model.DefencePosition, error) {
	var res model.DefencePosition
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNDefencePosition2thailyᚋsrcᚋgraphᚋmodelᚐDefencePosition(ctx context.Context, sel ast.SelectionSet, v model.DefencePosition) graphql.Marshaler {
	return v
}

func (ec *executionContext) unmarshalNFileStatus2thailyᚋsrcᚋgraphᚋmodelᚐFileStatus(ctx context.Context, v any) (model.FileStatus, error) {
	var res model.FileStatus
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNFileStatus2thailyᚋsrcᚋgraphᚋmodelᚐFileStatus(ctx context.Context, sel ast.SelectionSet, v model.FileStatus) graphql.Marshaler {
	return v
}

func (ec *executionContext) unmarshalNFileTable2thailyᚋsrcᚋgraphᚋmodelᚐFileTable(ctx context.Context, v any) (model.FileTable, error) {
	var res model.FileTable
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNFileTable2thailyᚋsrcᚋgraphᚋmodelᚐFileTable(ctx context.Context, sel ast.SelectionSet, v model.FileTable) graphql.Marshaler {
	return v
}

func (ec *executionContext) unmarshalNFinalStatus2thailyᚋsrcᚋgraphᚋmodelᚐFinalStatus(ctx context.Context, v any) (model.FinalStatus, error) {
	var res model.FinalStatus
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNFinalStatus2thailyᚋsrcᚋgraphᚋmodelᚐFinalStatus(ctx context.Context, sel ast.SelectionSet, v model.FinalStatus) graphql.Marshaler {
	return v
}

func (ec *executionContext) unmarshalNMidtermStatus2thailyᚋsrcᚋgraphᚋmodelᚐMidtermStatus(ctx context.Context, v any) (model.MidtermStatus, error) {
	var res model.MidtermStatus
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNMidtermStatus2thailyᚋsrcᚋgraphᚋmodelᚐMidtermStatus(ctx context.Context, sel ast.SelectionSet, v model.MidtermStatus) graphql.Marshaler {
	return v
}

func (ec *executionContext) unmarshalNRoleSystemRole2thailyᚋsrcᚋgraphᚋmodelᚐRoleSystemRole(ctx context.Context, v any) (model.RoleSystemRole, error) {
	var res model.RoleSystemRole
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNRoleSystemRole2thailyᚋsrcᚋgraphᚋmodelᚐRoleSystemRole(ctx context.Context, sel ast.SelectionSet, v model.RoleSystemRole) graphql.Marshaler {
	return v
}

func (ec *executionContext) unmarshalNTime2timeᚐTime(ctx context.Context, v any) (time.Time, error) {
	res, err := graphql.UnmarshalTime(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNTime2timeᚐTime(ctx context.Context, sel ast.SelectionSet, v time.Time) graphql.Marshaler {
	_ = sel
	res := graphql.MarshalTime(v)
	if res == graphql.Null {
		if !graphql.HasFieldError(ctx, graphql.GetFieldContext(ctx)) {
			ec.Errorf(ctx, "the requested element is null which the schema does not allow")
		}
	}
	return res
}

func (ec *executionContext) unmarshalNTopicStatus2thailyᚋsrcᚋgraphᚋmodelᚐTopicStatus(ctx context.Context, v any) (model.TopicStatus, error) {
	var res model.TopicStatus
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalNTopicStatus2thailyᚋsrcᚋgraphᚋmodelᚐTopicStatus(ctx context.Context, sel ast.SelectionSet, v model.TopicStatus) graphql.Marshaler {
	return v
}

func (ec *executionContext) unmarshalOGender2ᚖthailyᚋsrcᚋgraphᚋmodelᚐGender(ctx context.Context, v any) (*model.Gender, error) {
	if v == nil {
		return nil, nil
	}
	var res = new(model.Gender)
	err := res.UnmarshalGQL(v)
	return res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalOGender2ᚖthailyᚋsrcᚋgraphᚋmodelᚐGender(ctx context.Context, sel ast.SelectionSet, v *model.Gender) graphql.Marshaler {
	if v == nil {
		return graphql.Null
	}
	return v
}

func (ec *executionContext) unmarshalOTime2ᚖtimeᚐTime(ctx context.Context, v any) (*time.Time, error) {
	if v == nil {
		return nil, nil
	}
	res, err := graphql.UnmarshalTime(v)
	return &res, graphql.ErrorOnPath(ctx, err)
}

func (ec *executionContext) marshalOTime2ᚖtimeᚐTime(ctx context.Context, sel ast.SelectionSet, v *time.Time) graphql.Marshaler {
	if v == nil {
		return graphql.Null
	}
	_ = sel
	_ = ctx
	res := graphql.MarshalTime(*v)
	return res
}

// endregion ***************************** type.gotpl *****************************
